import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ToastHost from "@/components/ui/ToastHost";
import CommandPaletteProvider from "@/components/providers/CommandPaletteProvider";
import RoleProvider from "@/components/providers/RoleProvider";
import PerfHUDProvider from "@/components/providers/PerfHUDProvider";
import SchemaOverlayProvider from "@/components/providers/SchemaOverlayProvider";

// side-effect import for approval auto-timeouts (no-op unless events fire)
import "../lib/listeners/approval-timeouts";
// dev events capture (no-op in prod)
import "../lib/listeners/dev-capture";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        <a href="#main" className="sr-only focus:not-sr-only absolute left-2 top-2 bg-black text-white px-3 py-1 rounded">Skip to content</a>
        <script dangerouslySetInnerHTML={{
          __html: `
            if (localStorage.getItem('theme') === 'dark') {
              document.body.classList.add('dark');
            }
          `
        }} />
        <ToastHost>
          <RoleProvider>
            <CommandPaletteProvider>
              <PerfHUDProvider>
                <SchemaOverlayProvider>
                  {children}
                </SchemaOverlayProvider>
              </PerfHUDProvider>
            </CommandPaletteProvider>
          </RoleProvider>
        </ToastHost>
      </body>
    </html>
  );
}
